{"version":3,"file":"index-DaNI9o-3.js","sources":["../../../../components/TaskInput.vue","../../../../components/TaskInput.vue","../../../../components/TaskList.vue","../../../../composables/task.ts","../../../../pages/index.vue","../../../../pages/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"flex items-center space-x-2 mt-5\">\r\n      <input\r\n        v-model=\"newTask\"\r\n        @keydown.enter=\"addTask\"\r\n        placeholder=\"Ingrese una nueva tarea...\"\r\n        class=\"p-2 border border-gray-300 focus:outline-none focus:border-green-500 rounded-md\"\r\n\r\n      />\r\n      <button @click=\"addTask\" class=\"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition-all duration-300 ease-in-out\"\r\n>Agregar</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script lang=\"ts\">\r\n  import { ref } from 'vue';\r\n/*     defineProps<{}>();\r\n\r\n    defineOptions({\r\n      tasks: Array,\r\n    });\r\n\r\n    const newTask = ref(\"\"); */\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        newTask: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n\r\n\r\n      addTask() {\r\n        this.$emit('addTask', this.newTask);\r\n        this.resetNewTask();\r\n      },\r\n      resetNewTask() {\r\n        this.newTask = '';\r\n      }\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n    <div class=\"flex items-center space-x-2 mt-5\">\r\n      <input\r\n        v-model=\"newTask\"\r\n        @keydown.enter=\"addTask\"\r\n        placeholder=\"Ingrese una nueva tarea...\"\r\n        class=\"p-2 border border-gray-300 focus:outline-none focus:border-green-500 rounded-md\"\r\n\r\n      />\r\n      <button @click=\"addTask\" class=\"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition-all duration-300 ease-in-out\"\r\n>Agregar</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script lang=\"ts\">\r\n  import { ref } from 'vue';\r\n/*     defineProps<{}>();\r\n\r\n    defineOptions({\r\n      tasks: Array,\r\n    });\r\n\r\n    const newTask = ref(\"\"); */\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        newTask: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n\r\n\r\n      addTask() {\r\n        this.$emit('addTask', this.newTask);\r\n        this.resetNewTask();\r\n      },\r\n      resetNewTask() {\r\n        this.newTask = '';\r\n      }\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n    <div class=\"flex\">\r\n      <!-- Display incomplete tasks -->\r\n      <div class=\"flex-1\">\r\n      <h2 v-if=\"incompleteTasks.length > 0\" class=\"mt-4 text-2xl font-bold text-indigo-600 mb-4\">Lista pendientes:</h2>\r\n      <ul v-if=\"incompleteTasks.length > 0\" class=\"divide-y\">\r\n        <li v-for=\"(task, index) in incompleteTasks\" :key=\"index\" class=\"flex flex-col md:flex-row items-center justify-between p-2 bg-white shadow-md rounded-lg mb-2\">\r\n          <div class=\"flex items-center mb-2 md:mb-0\">\r\n            <span v-if=\"task.completed\" class=\"mr-2 text-green-500\">\r\n              <Icon name=\"streamline-emojis:sparkles\" />\r\n            </span>\r\n            <span v-if=\"task.id === idEditable \"> \r\n              <input class=\"border border-gray-400 p-1 focus:outline-none focus:ring focus:border-blue-300 rounded-md\" v-model=\"task.name\" />\r\n            </span>\r\n            <span v-else :class=\"{ 'line-through': task.completed, 'text-gray-700': !task.completed }\">{{ task.name }}</span>\r\n          </div>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <button @click=\"toggleTask(task.id)\" class=\"ml-2 px-2 py-1 bg-blue-500 text-white rounded\">\r\n              <Icon name=\"flat-color-icons:ok\" />\r\n              {{ task.completed ? 'Desmarcar' : 'Marcar' }}\r\n            </button>\r\n            <button @click=\"removeTask(task.id)\" class=\"px-2 py-1 bg-red-500 text-white rounded focus:outline-none focus:ring focus:border-red-300\">\r\n              <Icon name=\"fxemoji:ballottboxwithscriptx\" /> Eliminar\r\n            </button>\r\n            <button v-if=\"isEditing\" @click=\"saveTask(task.id)\" class=\"px-2 py-1 bg-green-500 text-white rounded focus:outline-none focus:ring focus:border-green-300\">\r\n              <Icon name=\"dashicons:cloud-saved\" /> Guardar\r\n            </button>\r\n            <button v-if=\"isEditing\" @click=\"cancelEdit\" class=\"px-2 py-1 bg-red-500 text-white rounded focus:outline-none focus:ring focus:border-red-300\">\r\n              <Icon name=\"lets-icons:cancel-fill\" /> Cancelar\r\n            </button>\r\n            <button v-else @click=\"editTask(task.id)\" class=\"px-2 py-1 bg-yellow-500 text-white rounded focus:outline-none focus:ring focus:border-yellow-300\">\r\n              <Icon name=\"fxemoji:pencil\" /> Editar\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      \r\n      <p v-else class=\"text-white text-2xl font-bold mt-4\">No hay tareas disponibles!.</p>\r\n    </div>\r\n      <!-- Display completed tasks -->\r\n      <div class=\"ml-4 flex-2\">\r\n      <h2 v-if=\"completedTasks.length > 0\" class=\"mt-4 text-2xl font-bold text-green-600\">Lista completadas:</h2>\r\n      <ul v-if=\"completedTasks.length > 0\" class=\"mt-4 divide-y\">\r\n        <li v-for=\"(task, index) in completedTasks\" :key=\"index\" class=\"flex flex-col md:flex-row items-center justify-between p-2 bg-white shadow-md rounded-lg mb-2\">\r\n          <div class=\"flex items-center mb-2 md:mb-0\">\r\n            <span class=\"mr-2 text-green-500\">\r\n              <Icon name=\"streamline-emojis:sparkles\" />\r\n            </span>\r\n            <span :class=\"{ 'line-through': task.completed, 'text-gray-700': !task.completed }\">{{ task.name }}</span>\r\n          </div>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <button @click=\"toggleTask(task.id)\" class=\"ml-2 px-2 py-1 bg-blue-500 text-white rounded\">\r\n              <Icon name=\"flat-color-icons:ok\" />\r\n              {{ task.completed ? 'Desmarcar' : 'Marcar' }}\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        isEditing: false,\r\n        idEditable: null,\r\n      };\r\n    },\r\n    props: {\r\n      tasks: Array,\r\n    },\r\n    computed: {\r\n      incompleteTasks() {\r\n        return this.tasks.filter((task) => !task.completed);\r\n      },\r\n      completedTasks() {\r\n        return this.tasks.filter((task) => task.completed);\r\n      },\r\n    },\r\n    methods: {\r\n      toggleTask(id) {\r\n        this.$emit('toggle-task', id);\r\n      },\r\n      removeTask(id) {\r\n        this.$emit('remove-task', id);\r\n      },\r\n      editTask(id) {\r\n        this.idEditable = id;\r\n        this.isEditing = true;\r\n        this.editedTaskName = this.getTaskById(id).name;\r\n      },\r\n      saveTask(id) {\r\n        this.$emit('save-task', id, this.editedTaskName);\r\n        this.cancelEdit();\r\n      },\r\n      cancelEdit() {\r\n        this.idEditable = null;\r\n        this.isEditing = false;\r\n        this.editedTaskName = '';\r\n      },\r\n      getTaskById(id) {\r\n        return this.tasks.find((task) => task.id === id);\r\n      },\r\n    },\r\n  };\r\n  </script>","import { defineStore } from \"pinia\";\r\n// test1\r\nexport const useStateTaskStore = defineStore({\r\n  id: \"StateTaskStore\",\r\n  state: () => ({\r\n    tasks: [] as Task[],\r\n  }),\r\n  actions: {\r\n    addTask(task: string) {\r\n      let objectTask = {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        timestamp: new Date().getTime(),\r\n        name: task,\r\n        completed: false,\r\n      };\r\n      this.tasks.push(objectTask);\r\n    },\r\n    toggleTask(id: number) {\r\n      const foundIndex = this.tasks.findIndex((task) => task.id === id);\r\n      if (foundIndex !== -1) {\r\n        this.tasks[foundIndex].completed = !this.tasks[foundIndex].completed;\r\n      }\r\n    },\r\n    removeTask(id: number) {\r\n      const foundIndex = this.tasks.findIndex((task) => task.id === id);\r\n      if (foundIndex !== -1) {\r\n        this.tasks.splice(foundIndex, 1);\r\n      }\r\n    },\r\n    getTasks() {\r\n      return this.tasks;\r\n    },\r\n    editTask(id: number, task) {\r\n      const foundIndex = this.tasks.findIndex((task) => task.id === id);\r\n      if (foundIndex !== -1) {\r\n        this.tasks[foundIndex].name = task.name;\r\n      }\r\n    },\r\n  },\r\n  // Persist the store in localStorage\r\n  persist: true,\r\n});\r\n","<template>\r\n<!-- Test -->\r\n      <TaskInput @addTask=\"addTask\"/>\r\n      <TaskList :tasks=\"tasks\" @removeTask=\"removeTask\" @toggleTask=\"toggleTask\" @editTask=\"editTask\"/>\r\n    \r\n</template>\r\n  \r\n<script lang=\"ts\">\r\nimport { ref } from 'vue';\r\nimport TaskInput from '@/components/TaskInput.vue';\r\nimport TaskList from '@/components/TaskList.vue';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        newTask: \"\",\r\n        tasks: []\r\n      };\r\n    },\r\n    mounted() {\r\n      const stateTaskStore = useStateTaskStore();\r\n      this.tasks = stateTaskStore.getTasks() ;\r\n\r\n    },\r\n    methods: {\r\n      addTask (task: string) {\r\n        try {\r\n          const stateTaskStore = useStateTaskStore();\r\n          if (task.trim() !== \"\") {\r\n            stateTaskStore.addTask(task.trim());\r\n            this.tasks = stateTaskStore.getTasks() ;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error adding task:\", error);\r\n        }\r\n      },\r\n      removeTask (id: number) {\r\n        try {\r\n            const stateTaskStore = useStateTaskStore();\r\n            stateTaskStore.removeTask(id);\r\n            this.tasks = stateTaskStore.getTasks() ;\r\n            } catch (error) {\r\n            console.error(\"Error removing task:\", error);\r\n        }\r\n    },\r\n    toggleTask (id: number) {\r\n      try {\r\n          const stateTaskStore = useStateTaskStore();\r\n          stateTaskStore.toggleTask(id);\r\n          this.tasks = stateTaskStore.getTasks() ;\r\n          } catch (error) {\r\n          console.error(\"Error toggling task:\", error);\r\n        }\r\n    },\r\n    editTask (id: number, name: string){\r\n        try {\r\n            const stateTaskStore = useStateTaskStore();\r\n            stateTaskStore.editTask(id, name);\r\n            } catch (error) {\r\n            console.error(\"Error editing task:\", error);\r\n        }\r\n    }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n\r\n","<template>\r\n<!-- Test -->\r\n      <TaskInput @addTask=\"addTask\"/>\r\n      <TaskList :tasks=\"tasks\" @removeTask=\"removeTask\" @toggleTask=\"toggleTask\" @editTask=\"editTask\"/>\r\n    \r\n</template>\r\n  \r\n<script lang=\"ts\">\r\nimport { ref } from 'vue';\r\nimport TaskInput from '@/components/TaskInput.vue';\r\nimport TaskList from '@/components/TaskList.vue';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        newTask: \"\",\r\n        tasks: []\r\n      };\r\n    },\r\n    mounted() {\r\n      const stateTaskStore = useStateTaskStore();\r\n      this.tasks = stateTaskStore.getTasks() ;\r\n\r\n    },\r\n    methods: {\r\n      addTask (task: string) {\r\n        try {\r\n          const stateTaskStore = useStateTaskStore();\r\n          if (task.trim() !== \"\") {\r\n            stateTaskStore.addTask(task.trim());\r\n            this.tasks = stateTaskStore.getTasks() ;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error adding task:\", error);\r\n        }\r\n      },\r\n      removeTask (id: number) {\r\n        try {\r\n            const stateTaskStore = useStateTaskStore();\r\n            stateTaskStore.removeTask(id);\r\n            this.tasks = stateTaskStore.getTasks() ;\r\n            } catch (error) {\r\n            console.error(\"Error removing task:\", error);\r\n        }\r\n    },\r\n    toggleTask (id: number) {\r\n      try {\r\n          const stateTaskStore = useStateTaskStore();\r\n          stateTaskStore.toggleTask(id);\r\n          this.tasks = stateTaskStore.getTasks() ;\r\n          } catch (error) {\r\n          console.error(\"Error toggling task:\", error);\r\n        }\r\n    },\r\n    editTask (id: number, name: string){\r\n        try {\r\n            const stateTaskStore = useStateTaskStore();\r\n            stateTaskStore.editTask(id, name);\r\n            } catch (error) {\r\n            console.error(\"Error editing task:\", error);\r\n        }\r\n    }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n\r\n"],"names":["_sfc_ssrRender","_ssrRenderAttrs","_mergeProps","_ssrRenderAttr","_sfc_main","_ssrRenderList","index","_ssrRenderComponent","_ssrRenderClass","_ssrInterpolate","task"],"mappings":"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"}